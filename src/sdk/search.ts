/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { searchSearchTransactions } from "../funcs/searchSearchTransactions.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as models from "../models/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Search extends ClientSDK {
  /**
   * [INDEXER] Search for Transactions
   *
   * @remarks
   * `/search/transactions` allows the caller to search for transactions that meet certain conditions. Some conditions include matching a transaction hash, containing an operation with a certain status, or containing an operation that affects a certain account. `/search/transactions` is considered an "indexer" endpoint and Rosetta implementations are not required to complete it to adhere to the Rosetta spec. However, any Rosetta "indexer" MUST support this endpoint.
   */
  async searchTransactions(
    request: models.SearchTransactionsRequest,
    options?: RequestOptions,
  ): Promise<models.SearchTransactionsResponse> {
    return unwrapAsync(searchSearchTransactions(
      this,
      request,
      options,
    ));
  }
}
