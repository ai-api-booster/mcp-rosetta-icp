/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { networkNetworkList } from "../funcs/networkNetworkList.js";
import { networkNetworkOptions } from "../funcs/networkNetworkOptions.js";
import { networkNetworkStatus } from "../funcs/networkNetworkStatus.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as models from "../models/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Network extends ClientSDK {
  /**
   * Get List of Available Networks
   *
   * @remarks
   * This endpoint returns a list of NetworkIdentifiers that the Rosetta server supports.
   */
  async networkList(
    request: models.MetadataRequest,
    options?: RequestOptions,
  ): Promise<models.NetworkListResponse> {
    return unwrapAsync(networkNetworkList(
      this,
      request,
      options,
    ));
  }

  /**
   * Get Network Status
   *
   * @remarks
   * This endpoint returns the current status of the network requested. Any NetworkIdentifier returned by /network/list should be accessible here.
   */
  async networkStatus(
    request: models.NetworkRequest,
    options?: RequestOptions,
  ): Promise<models.NetworkStatusResponse> {
    return unwrapAsync(networkNetworkStatus(
      this,
      request,
      options,
    ));
  }

  /**
   * Get Network Options
   *
   * @remarks
   * This endpoint returns the version information and allowed network-specific types for a NetworkIdentifier. Any NetworkIdentifier returned by /network/list should be accessible here. Because options are retrievable in the context of a NetworkIdentifier, it is possible to define unique options for each network.
   */
  async networkOptions(
    request: models.NetworkRequest,
    options?: RequestOptions,
  ): Promise<models.NetworkOptionsResponse> {
    return unwrapAsync(networkNetworkOptions(
      this,
      request,
      options,
    ));
  }
}
